{"version":3,"file":"src_app_modules_contact_contact_module_ts.js","mappings":"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","sources":["./src/app/modules/contact/contact-routing.module.ts","./src/app/modules/contact/contact.module.ts","./src/app/modules/contact/contact/contact.component.ts","./src/app/modules/contact/contact/contact.component.html","./src/app/modules/contact/store/contact.actions.ts","./src/app/modules/contact/store/contact.effects.ts","./src/app/modules/contact/store/contact.facade.ts","./src/app/modules/contact/store/contact.models.ts","./src/app/modules/contact/store/contact.reducer.ts","./src/app/modules/contact/store/contact.selectors.ts","./src/app/modules/contact/store/contact.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ContactComponent } from './contact/contact.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ContactComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ContactRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxTranslateModule } from '../ngx-translate/ngx-translate.module';\nimport { MaterialUiModule } from '../material-ui/material-ui.module';\nimport { ContactRoutingModule } from './contact-routing.module';\nimport { ContactComponent } from './contact/contact.component';\nimport { AppFacade } from 'src/app/store/app.facade';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ContactEffects } from './store/contact.effects';\nimport { ContactFacade } from './store/contact.facade';\nimport * as fromContact from './store/contact.reducer';\nimport { StoreModule } from '@ngrx/store';\n\n@NgModule({\n  declarations: [ContactComponent],\n  imports: [\n    StoreModule.forFeature(fromContact.CONTACT_FEATURE_KEY, fromContact.reducer),\n    EffectsModule.forFeature([ContactEffects]),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialUiModule,\n    NgxTranslateModule,\n    ContactRoutingModule\n  ],\n  providers: [AppFacade, ContactFacade]\n})\nexport class ContactModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { TranslateService } from '@ngx-translate/core';\nimport { take } from 'rxjs/operators';\nimport { AppFacade } from 'src/app/store/app.facade';\nimport { ModalConfirmationComponent } from 'src/app/modal-confirmation/modal-confirmation.component';\nimport { ContactService } from '../store/contact.service';\nimport { ContactForm } from '../store/contact.models';\nimport { ContactFacade } from '../store/contact.facade';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss'],\n})\nexport class ContactComponent implements OnInit {\n  contactForm: FormGroup;\n\n  constructor(\n    private dialog: MatDialog,\n    private fb: FormBuilder,\n    private appFacade: AppFacade,\n    private contactFacade: ContactFacade,\n    private translate: TranslateService,\n    private contactService: ContactService,\n  ) {\n  }\n\n  ngOnInit() {\n    this.initForm();\n    this.appFacade.setItIsHome(false);\n  }\n\n  send(form: ContactForm) {\n    this.contactFacade.sendMail(form);\n    this.contactFacade.getFormspreeResponse$.pipe(take(2)).subscribe(formspreeResponse => {\n      if (formspreeResponse) {\n        if (formspreeResponse.ok) {\n          this.openModalConfirmation(\n            'SUCCESS',\n            this.translate.instant('APP.contact'),\n            this.translate.instant('CONTACT.message_sent_successfully')\n          );\n        } else {\n          this.openModalConfirmation(\n            'ERROR',\n            this.translate.instant('APP.contact'),\n            this.translate.instant('CONTACT.message_error_occurred')\n          );\n        }\n        this.appFacade.sendAnalyticsEvent('send_mail', 'contact', 'contact', 'click');\n      }\n    });\n  }\n\n  getRemaning() {\n    const message = this.contactForm.get('message').value;\n    return message ? (message.length / 250) * 100 : 0;\n  }\n\n  private initForm() {\n    this.contactForm = this.fb.group({\n      name: ['', Validators.compose([Validators.required, , Validators.minLength(5)])],\n      _replyto: ['', Validators.compose([Validators.required, this.contactService.emailValidator])],\n      message: ['', Validators.compose([Validators.required, Validators.minLength(5)])]\n    });\n  }\n\n  private openModalConfirmation(type: string, title: string, message: string) {\n    const dialogRef = this.dialog.open(ModalConfirmationComponent, {\n      data: { type, title, message }\n    });\n    dialogRef.afterClosed().subscribe(() => {\n      this.contactForm.reset();\n    });\n  }\n}\n","<aside>\n  <div class=\"column left\">\n    <h2>{{ \"APP.contact\" | translate }}</h2>\n    <p>jnisperuza1102@gmail.com</p>\n  </div>\n  <div class=\"column right\">\n    <div class=\"row col s12\">\n      <p>{{ \"CONTACT.you_can_reach_me\" | translate }}</p>\n    </div>\n    <div class=\"networks\">\n      <a\n        aria-label=\"github\"\n        rel=\"noreferrer\"\n        href=\"https://github.com/jnisperuza\"\n        target=\"_blank\"\n        class=\"social git\"\n      ></a>\n      <a\n        aria-label=\"twitter\"\n        rel=\"noreferrer\"\n        href=\"https://twitter.com/jeisonnisperuza\"\n        target=\"_blank\"\n        class=\"social twitter\"\n      ></a>\n      <a\n        aria-label=\"linkedin\"\n        rel=\"noreferrer\"\n        href=\"https://www.linkedin.com/in/jeison-nisperuza/\"\n        target=\"_blank\"\n        class=\"social linkedin\"\n      ></a>\n    </div>\n\n    <div class=\"wrapper-form\">\n      <h5>{{ \"CONTACT.send_me_message\" | translate }}</h5>\n      <a\n        aria-label=\"mailto\"\n        href=\"mailto:jnisperuza1102@gmail.com?Subject=Get%20in%20touch\"\n      >\n        {{ \"CONTACT.send_from_mail_client\" | translate }}\n        <mat-icon>open_in_new</mat-icon>\n      </a>\n      <form\n        [formGroup]=\"contactForm\"\n        (ngSubmit)=\"send(contactForm.value)\"\n        autocomplete=\"off\"\n      >\n        <mat-form-field appearance=\"outline\">\n          <mat-label>{{ \"GENERAL.name\" | translate }}</mat-label>\n          <input\n            type=\"text\"\n            matInput\n            formControlName=\"name\"\n            maxlength=\"80\"\n            required\n          />\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\">\n          <mat-label>{{ \"GENERAL.email\" | translate }}</mat-label>\n          <input type=\"email\" matInput formControlName=\"_replyto\" required />\n        </mat-form-field>\n        <mat-form-field appearance=\"outline\">\n          <mat-label>{{ \"GENERAL.message\" | translate }}</mat-label>\n          <textarea\n            matInput\n            formControlName=\"message\"\n            maxlength=\"250\"\n            required\n          ></textarea>\n          <mat-progress-bar\n            mode=\"determinate\"\n            [value]=\"getRemaning()\"\n          ></mat-progress-bar>\n        </mat-form-field>\n        <div class=\"action\">\n          <button\n            name=\"send-message\"\n            mat-raised-button\n            [disabled]=\"!contactForm.valid\"\n          >\n            {{ \"CONTACT.send_message\" | translate }}\n          </button>\n        </div>\n      </form>\n    </div>\n  </div>\n</aside>\n","import { createAction, props } from '@ngrx/store';\nimport { ContactForm, FormspreeResponse } from './contact.models';\n\nexport const sendMail = createAction('[ContactModule] Send Mail Action', props<{ form: ContactForm }>());\nexport const sendMailSuccess = createAction('[ContactModule] Send Mail Success Action', props<{ formspreeResponse: FormspreeResponse }>());\nexport const sendMailFail = createAction('[ContactModule] Send Mail Fail Action', props<{ error: any }>());","import { Injectable } from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { of } from \"rxjs\";\nimport { catchError, exhaustMap, map } from \"rxjs/operators\";\nimport { sendMail, sendMailSuccess, sendMailFail } from \"./contact.actions\";\nimport { ContactService } from \"./contact.service\";\n\n\n@Injectable()\nexport class ContactEffects {\n\n    constructor(private actions$: Actions, private contactService: ContactService) { }\n\n    sendAnalyticsEvent$ = createEffect(() =>\n        this.actions$.pipe(\n            ofType(sendMail),\n            exhaustMap(\n                action => this.contactService.sendMail(action.form).pipe(\n                    map(formspreeResponse => sendMailSuccess({ formspreeResponse })),\n                    catchError(error => of(sendMailFail({ error })))\n                )\n            )\n        )\n    )\n}","import { Injectable } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { sendMail } from './contact.actions';\nimport { ContactForm, IContact } from './contact.models';\nimport { getFormspreeResponse } from './contact.selectors';\n\n@Injectable()\nexport class ContactFacade {\n    constructor(private store: Store<IContact>) { }\n\n    getFormspreeResponse$ = this.store.pipe(select(getFormspreeResponse));\n\n    sendMail(form: ContactForm) {\n        this.store.dispatch(sendMail({ form }));\n    }\n}","import { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\n\nexport interface ContactForm {\n    name: string;\n    email: string;\n    message: string;\n}\n\nexport interface FormspreeResponse {\n    next: string;\n    ok: boolean;\n}\n\nexport interface StringRequest {\n    id: string;\n}\n\nexport interface IContact extends EntityState<StringRequest> {\n    formspreeResponse: FormspreeResponse;\n    error: any;\n}\n\nexport const adapter: EntityAdapter<StringRequest> = createEntityAdapter<StringRequest>();\n\nexport const InitialContactState: IContact = adapter.getInitialState({\n    formspreeResponse: null,\n    error: null\n});\n","import { createReducer, on, Action } from '@ngrx/store';\nimport { sendMail, sendMailSuccess, sendMailFail } from './contact.actions';\nimport { InitialContactState, IContact } from './contact.models';\n\nexport const CONTACT_FEATURE_KEY = 'ContactState';\n\nexport const reducer = createReducer(\n    InitialContactState as IContact,\n    on(sendMail, (state, { form }) => ({\n        ...state,\n        formspreeResponse: null,\n        error: null,\n        form\n    })),\n    on(sendMailSuccess, (state, { formspreeResponse }) => ({\n        ...state,\n        formspreeResponse\n    })),\n    on(sendMailFail, (state, { error }) => ({\n        ...state,\n        error\n    })),\n);\n\nexport function ContactReducer(state: IContact, action: Action): IContact {\n    return reducer(state as IContact, action as Action);\n}","import { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { IContact } from './contact.models';\nimport { CONTACT_FEATURE_KEY } from './contact.reducer';\n\nexport const selectContactState = createFeatureSelector<IContact>(CONTACT_FEATURE_KEY);\n\nexport const getFormspreeResponse = createSelector(selectContactState, (state: IContact) => state.formspreeResponse);","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormControl } from '@angular/forms';\nimport { ContactForm, FormspreeResponse } from './contact.models';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactService {\n  constructor(public http: HttpClient) { }\n\n  emailValidator(control: FormControl) {\n    if (\n      control &&\n      control.value &&\n      control.value.match(\n        // tslint:disable-next-line: max-line-length\n        /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/\n      )\n    ) {\n      return null;\n    } else {\n      return { invalidEmailAddress: true };\n    }\n  }\n\n  sendMail(form: ContactForm): Observable<FormspreeResponse> {\n    return this.http.post<FormspreeResponse>('https://formspree.io/f/mgepyarr', form);\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}